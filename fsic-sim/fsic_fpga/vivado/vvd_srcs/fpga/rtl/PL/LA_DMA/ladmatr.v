// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ladmatr_ladmatr,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=2142,HLS_SYN_LUT=3967,HLS_VERSION=2022_1}" *)

module ladmatr (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        inStreamTop_TDATA,
        inStreamTop_TKEEP,
        inStreamTop_TSTRB,
        inStreamTop_TUSER,
        inStreamTop_TLAST,
        inStreamTop_TVALID,
        inStreamTop_TREADY
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
input  [31:0] inStreamTop_TDATA;
input  [3:0] inStreamTop_TKEEP;
input  [3:0] inStreamTop_TSTRB;
input  [1:0] inStreamTop_TUSER;
input  [0:0] inStreamTop_TLAST;
input   inStreamTop_TVALID;
output   inStreamTop_TREADY;

 reg    ap_rst_n_inv;
wire    out_buf_sts;
wire    sts_clear;
wire   [31:0] s2m_len;
wire   [31:0] pattern;
wire   [63:0] outbuf;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
wire   [31:0] gmem0_RDATA;
wire   [8:0] gmem0_RFIFONUM;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire    entry_proc_U0_start_out;
wire    entry_proc_U0_start_write;
wire   [63:0] entry_proc_U0_outbuf_c_din;
wire    entry_proc_U0_outbuf_c_write;
wire    getinstream_U0_ap_start;
wire    getinstream_U0_ap_done;
wire    getinstream_U0_ap_continue;
wire    getinstream_U0_ap_idle;
wire    getinstream_U0_ap_ready;
wire    getinstream_U0_inStreamTop_TREADY;
wire   [0:0] getinstream_U0_sts_clear;
wire   [32:0] getinstream_U0_buf_r_din;
wire    getinstream_U0_buf_r_write;
wire   [31:0] getinstream_U0_count19_din;
wire    getinstream_U0_count19_write;
wire   [0:0] getinstream_U0_sts_clear_c_din;
wire    getinstream_U0_sts_clear_c_write;
wire   [31:0] getinstream_U0_s2m_len_c_din;
wire    getinstream_U0_s2m_len_c_write;
wire    streamtoparallelwithburst_U0_ap_start;
wire    streamtoparallelwithburst_U0_ap_done;
wire    streamtoparallelwithburst_U0_ap_continue;
wire    streamtoparallelwithburst_U0_ap_idle;
wire    streamtoparallelwithburst_U0_ap_ready;
wire    streamtoparallelwithburst_U0_buf_r_read;
wire    streamtoparallelwithburst_U0_count19_read;
wire   [0:0] streamtoparallelwithburst_U0_out_buf_sts;
wire    streamtoparallelwithburst_U0_out_buf_sts_ap_vld;
wire    streamtoparallelwithburst_U0_sts_clear_read;
wire    streamtoparallelwithburst_U0_in_s2m_len_read;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_AWVALID;
wire   [63:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWADDR;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWID;
wire   [31:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWLEN;
wire   [2:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWSIZE;
wire   [1:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWBURST;
wire   [1:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWLOCK;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWCACHE;
wire   [2:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWPROT;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWQOS;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWREGION;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWUSER;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_WVALID;
wire   [31:0] streamtoparallelwithburst_U0_m_axi_gmem0_WDATA;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_WSTRB;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_WLAST;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_WID;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_WUSER;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_ARVALID;
wire   [63:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARADDR;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARID;
wire   [31:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARLEN;
wire   [2:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARSIZE;
wire   [1:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARBURST;
wire   [1:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARLOCK;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARCACHE;
wire   [2:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARPROT;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARQOS;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARREGION;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARUSER;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_RREADY;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_BREADY;
wire    streamtoparallelwithburst_U0_out_memory_read;
wire    outbuf_c_full_n;
wire   [63:0] outbuf_c_dout;
wire   [2:0] outbuf_c_num_data_valid;
wire   [2:0] outbuf_c_fifo_cap;
wire    outbuf_c_empty_n;
wire    buf_full_n;
wire   [32:0] buf_dout;
wire   [7:0] buf_num_data_valid;
wire   [7:0] buf_fifo_cap;
wire    buf_empty_n;
wire    count_full_n;
wire   [31:0] count_dout;
wire   [3:0] count_num_data_valid;
wire   [3:0] count_fifo_cap;
wire    count_empty_n;
wire    sts_clear_c_full_n;
wire   [0:0] sts_clear_c_dout;
wire   [1:0] sts_clear_c_num_data_valid;
wire   [1:0] sts_clear_c_fifo_cap;
wire    sts_clear_c_empty_n;
wire    s2m_len_c_full_n;
wire   [31:0] s2m_len_c_dout;
wire   [1:0] s2m_len_c_num_data_valid;
wire   [1:0] s2m_len_c_fifo_cap;
wire    s2m_len_c_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_getinstream_U0_ap_ready;
wire    ap_sync_getinstream_U0_ap_ready;
wire   [0:0] start_for_streamtoparallelwithburst_U0_din;
wire    start_for_streamtoparallelwithburst_U0_full_n;
wire   [0:0] start_for_streamtoparallelwithburst_U0_dout;
wire    start_for_streamtoparallelwithburst_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_getinstream_U0_ap_ready = 1'b0;
end

ladmatr_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .out_buf_sts(out_buf_sts),
    .out_buf_sts_ap_vld(streamtoparallelwithburst_U0_out_buf_sts_ap_vld),
    .sts_clear(sts_clear),
    .s2m_len(s2m_len),
    .pattern(pattern),
    .outbuf(outbuf),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

ladmatr_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 15 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 64 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem0_RDATA),
    .I_RFIFONUM(gmem0_RFIFONUM),
    .I_AWVALID(streamtoparallelwithburst_U0_m_axi_gmem0_AWVALID),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(streamtoparallelwithburst_U0_m_axi_gmem0_AWADDR),
    .I_AWLEN(streamtoparallelwithburst_U0_m_axi_gmem0_AWLEN),
    .I_WVALID(streamtoparallelwithburst_U0_m_axi_gmem0_WVALID),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(streamtoparallelwithburst_U0_m_axi_gmem0_WDATA),
    .I_WSTRB(streamtoparallelwithburst_U0_m_axi_gmem0_WSTRB),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(streamtoparallelwithburst_U0_m_axi_gmem0_BREADY)
);

ladmatr_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .start_full_n(start_for_streamtoparallelwithburst_U0_full_n),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .start_out(entry_proc_U0_start_out),
    .start_write(entry_proc_U0_start_write),
    .outbuf(outbuf),
    .outbuf_c_din(entry_proc_U0_outbuf_c_din),
    .outbuf_c_num_data_valid(outbuf_c_num_data_valid),
    .outbuf_c_fifo_cap(outbuf_c_fifo_cap),
    .outbuf_c_full_n(outbuf_c_full_n),
    .outbuf_c_write(entry_proc_U0_outbuf_c_write)
);

ladmatr_getinstream getinstream_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(getinstream_U0_ap_start),
    .ap_done(getinstream_U0_ap_done),
    .ap_continue(getinstream_U0_ap_continue),
    .ap_idle(getinstream_U0_ap_idle),
    .ap_ready(getinstream_U0_ap_ready),
    .inStreamTop_TDATA(inStreamTop_TDATA),
    .inStreamTop_TVALID(inStreamTop_TVALID),
    .inStreamTop_TREADY(getinstream_U0_inStreamTop_TREADY),
    .inStreamTop_TKEEP(inStreamTop_TKEEP),
    .inStreamTop_TSTRB(inStreamTop_TSTRB),
    .inStreamTop_TUSER(inStreamTop_TUSER),
    .inStreamTop_TLAST(inStreamTop_TLAST),
    .sts_clear(getinstream_U0_sts_clear),
    .in_s2m_len(s2m_len),
    .in_pattern(pattern),
    .buf_r_din(getinstream_U0_buf_r_din),
    .buf_r_num_data_valid(buf_num_data_valid),
    .buf_r_fifo_cap(buf_fifo_cap),
    .buf_r_full_n(buf_full_n),
    .buf_r_write(getinstream_U0_buf_r_write),
    .count19_din(getinstream_U0_count19_din),
    .count19_num_data_valid(count_num_data_valid),
    .count19_fifo_cap(count_fifo_cap),
    .count19_full_n(count_full_n),
    .count19_write(getinstream_U0_count19_write),
    .sts_clear_c_din(getinstream_U0_sts_clear_c_din),
    .sts_clear_c_num_data_valid(sts_clear_c_num_data_valid),
    .sts_clear_c_fifo_cap(sts_clear_c_fifo_cap),
    .sts_clear_c_full_n(sts_clear_c_full_n),
    .sts_clear_c_write(getinstream_U0_sts_clear_c_write),
    .s2m_len_c_din(getinstream_U0_s2m_len_c_din),
    .s2m_len_c_num_data_valid(s2m_len_c_num_data_valid),
    .s2m_len_c_fifo_cap(s2m_len_c_fifo_cap),
    .s2m_len_c_full_n(s2m_len_c_full_n),
    .s2m_len_c_write(getinstream_U0_s2m_len_c_write)
);

ladmatr_streamtoparallelwithburst streamtoparallelwithburst_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(streamtoparallelwithburst_U0_ap_start),
    .ap_done(streamtoparallelwithburst_U0_ap_done),
    .ap_continue(streamtoparallelwithburst_U0_ap_continue),
    .ap_idle(streamtoparallelwithburst_U0_ap_idle),
    .ap_ready(streamtoparallelwithburst_U0_ap_ready),
    .buf_r_dout(buf_dout),
    .buf_r_num_data_valid(buf_num_data_valid),
    .buf_r_fifo_cap(buf_fifo_cap),
    .buf_r_empty_n(buf_empty_n),
    .buf_r_read(streamtoparallelwithburst_U0_buf_r_read),
    .count19_dout(count_dout),
    .count19_num_data_valid(count_num_data_valid),
    .count19_fifo_cap(count_fifo_cap),
    .count19_empty_n(count_empty_n),
    .count19_read(streamtoparallelwithburst_U0_count19_read),
    .out_buf_sts(streamtoparallelwithburst_U0_out_buf_sts),
    .out_buf_sts_ap_vld(streamtoparallelwithburst_U0_out_buf_sts_ap_vld),
    .sts_clear_dout(sts_clear_c_dout),
    .sts_clear_num_data_valid(sts_clear_c_num_data_valid),
    .sts_clear_fifo_cap(sts_clear_c_fifo_cap),
    .sts_clear_empty_n(sts_clear_c_empty_n),
    .sts_clear_read(streamtoparallelwithburst_U0_sts_clear_read),
    .in_s2m_len_dout(s2m_len_c_dout),
    .in_s2m_len_num_data_valid(s2m_len_c_num_data_valid),
    .in_s2m_len_fifo_cap(s2m_len_c_fifo_cap),
    .in_s2m_len_empty_n(s2m_len_c_empty_n),
    .in_s2m_len_read(streamtoparallelwithburst_U0_in_s2m_len_read),
    .m_axi_gmem0_AWVALID(streamtoparallelwithburst_U0_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(gmem0_AWREADY),
    .m_axi_gmem0_AWADDR(streamtoparallelwithburst_U0_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(streamtoparallelwithburst_U0_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(streamtoparallelwithburst_U0_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(streamtoparallelwithburst_U0_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(streamtoparallelwithburst_U0_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(streamtoparallelwithburst_U0_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(streamtoparallelwithburst_U0_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(streamtoparallelwithburst_U0_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(streamtoparallelwithburst_U0_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(streamtoparallelwithburst_U0_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(streamtoparallelwithburst_U0_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(streamtoparallelwithburst_U0_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(gmem0_WREADY),
    .m_axi_gmem0_WDATA(streamtoparallelwithburst_U0_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(streamtoparallelwithburst_U0_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(streamtoparallelwithburst_U0_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(streamtoparallelwithburst_U0_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(streamtoparallelwithburst_U0_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(streamtoparallelwithburst_U0_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(1'b0),
    .m_axi_gmem0_ARADDR(streamtoparallelwithburst_U0_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(streamtoparallelwithburst_U0_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(streamtoparallelwithburst_U0_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(streamtoparallelwithburst_U0_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(streamtoparallelwithburst_U0_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(streamtoparallelwithburst_U0_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(streamtoparallelwithburst_U0_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(streamtoparallelwithburst_U0_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(streamtoparallelwithburst_U0_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(streamtoparallelwithburst_U0_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(streamtoparallelwithburst_U0_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(1'b0),
    .m_axi_gmem0_RREADY(streamtoparallelwithburst_U0_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(32'd0),
    .m_axi_gmem0_RLAST(1'b0),
    .m_axi_gmem0_RID(1'd0),
    .m_axi_gmem0_RFIFONUM(9'd0),
    .m_axi_gmem0_RUSER(1'd0),
    .m_axi_gmem0_RRESP(2'd0),
    .m_axi_gmem0_BVALID(gmem0_BVALID),
    .m_axi_gmem0_BREADY(streamtoparallelwithburst_U0_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(gmem0_BRESP),
    .m_axi_gmem0_BID(gmem0_BID),
    .m_axi_gmem0_BUSER(gmem0_BUSER),
    .out_memory_dout(outbuf_c_dout),
    .out_memory_num_data_valid(outbuf_c_num_data_valid),
    .out_memory_fifo_cap(outbuf_c_fifo_cap),
    .out_memory_empty_n(outbuf_c_empty_n),
    .out_memory_read(streamtoparallelwithburst_U0_out_memory_read)
);

ladmatr_fifo_w64_d3_S outbuf_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_outbuf_c_din),
    .if_full_n(outbuf_c_full_n),
    .if_write(entry_proc_U0_outbuf_c_write),
    .if_dout(outbuf_c_dout),
    .if_num_data_valid(outbuf_c_num_data_valid),
    .if_fifo_cap(outbuf_c_fifo_cap),
    .if_empty_n(outbuf_c_empty_n),
    .if_read(streamtoparallelwithburst_U0_out_memory_read)
);

ladmatr_fifo_w33_d128_A buf_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(getinstream_U0_buf_r_din),
    .if_full_n(buf_full_n),
    .if_write(getinstream_U0_buf_r_write),
    .if_dout(buf_dout),
    .if_num_data_valid(buf_num_data_valid),
    .if_fifo_cap(buf_fifo_cap),
    .if_empty_n(buf_empty_n),
    .if_read(streamtoparallelwithburst_U0_buf_r_read)
);

ladmatr_fifo_w32_d8_S count_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(getinstream_U0_count19_din),
    .if_full_n(count_full_n),
    .if_write(getinstream_U0_count19_write),
    .if_dout(count_dout),
    .if_num_data_valid(count_num_data_valid),
    .if_fifo_cap(count_fifo_cap),
    .if_empty_n(count_empty_n),
    .if_read(streamtoparallelwithburst_U0_count19_read)
);

ladmatr_fifo_w1_d2_S sts_clear_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(getinstream_U0_sts_clear_c_din),
    .if_full_n(sts_clear_c_full_n),
    .if_write(getinstream_U0_sts_clear_c_write),
    .if_dout(sts_clear_c_dout),
    .if_num_data_valid(sts_clear_c_num_data_valid),
    .if_fifo_cap(sts_clear_c_fifo_cap),
    .if_empty_n(sts_clear_c_empty_n),
    .if_read(streamtoparallelwithburst_U0_sts_clear_read)
);

ladmatr_fifo_w32_d2_S s2m_len_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(getinstream_U0_s2m_len_c_din),
    .if_full_n(s2m_len_c_full_n),
    .if_write(getinstream_U0_s2m_len_c_write),
    .if_dout(s2m_len_c_dout),
    .if_num_data_valid(s2m_len_c_num_data_valid),
    .if_fifo_cap(s2m_len_c_fifo_cap),
    .if_empty_n(s2m_len_c_empty_n),
    .if_read(streamtoparallelwithburst_U0_in_s2m_len_read)
);

ladmatr_start_for_streamtoparallelwithburst_U0 start_for_streamtoparallelwithburst_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_streamtoparallelwithburst_U0_din),
    .if_full_n(start_for_streamtoparallelwithburst_U0_full_n),
    .if_write(entry_proc_U0_start_write),
    .if_dout(start_for_streamtoparallelwithburst_U0_dout),
    .if_empty_n(start_for_streamtoparallelwithburst_U0_empty_n),
    .if_read(streamtoparallelwithburst_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_getinstream_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_getinstream_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_getinstream_U0_ap_ready <= ap_sync_getinstream_U0_ap_ready;
        end
    end
end

assign ap_done = streamtoparallelwithburst_U0_ap_done;

assign ap_idle = (streamtoparallelwithburst_U0_ap_idle & getinstream_U0_ap_idle & entry_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_getinstream_U0_ap_ready = (getinstream_U0_ap_ready | ap_sync_reg_getinstream_U0_ap_ready);

assign ap_sync_ready = (ap_sync_getinstream_U0_ap_ready & ap_sync_entry_proc_U0_ap_ready);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign getinstream_U0_ap_continue = 1'b1;

assign getinstream_U0_ap_start = ((ap_sync_reg_getinstream_U0_ap_ready ^ 1'b1) & ap_start);

assign getinstream_U0_sts_clear = sts_clear;

assign gmem0_BID = 1'd0;

assign gmem0_BRESP = 2'd0;

assign gmem0_BUSER = 1'd0;

assign inStreamTop_TREADY = getinstream_U0_inStreamTop_TREADY;

assign out_buf_sts = streamtoparallelwithburst_U0_out_buf_sts;

assign start_for_streamtoparallelwithburst_U0_din = 1'b1;

assign streamtoparallelwithburst_U0_ap_continue = 1'b1;

assign streamtoparallelwithburst_U0_ap_start = start_for_streamtoparallelwithburst_U0_empty_n;

endmodule //ladmatr
