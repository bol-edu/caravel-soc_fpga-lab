// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="userdma_userdma,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=4192,HLS_SYN_LUT=8119,HLS_VERSION=2022_1}" *)

module userdma (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        inStreamTop_TDATA,
        inStreamTop_TKEEP,
        inStreamTop_TSTRB,
        inStreamTop_TUSER,
        inStreamTop_TLAST,
        outStreamTop_TDATA,
        outStreamTop_TKEEP,
        outStreamTop_TSTRB,
        outStreamTop_TUSER,
        outStreamTop_TLAST,
        inStreamTop_TVALID,
        inStreamTop_TREADY,
        outStreamTop_TVALID,
        outStreamTop_TREADY
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
input  [31:0] inStreamTop_TDATA;
input  [3:0] inStreamTop_TKEEP;
input  [3:0] inStreamTop_TSTRB;
input  [6:0] inStreamTop_TUSER;
input  [0:0] inStreamTop_TLAST;
output  [31:0] outStreamTop_TDATA;
output  [3:0] outStreamTop_TKEEP;
output  [3:0] outStreamTop_TSTRB;
output  [6:0] outStreamTop_TUSER;
output  [0:0] outStreamTop_TLAST;
input   inStreamTop_TVALID;
output   inStreamTop_TREADY;
output   outStreamTop_TVALID;
input   outStreamTop_TREADY;

 reg    ap_rst_n_inv;
wire    s2m_buf_sts;
wire    s2m_sts_clear;
wire   [31:0] s2m_len;
wire   [0:0] s2m_enb_clrsts;
wire   [63:0] s2mbuf;
wire    s2m_err;
wire   [31:0] Img_width;
wire   [63:0] m2sbuf;
wire    m2s_buf_sts;
wire    m2s_sts_clear;
wire   [31:0] m2s_len;
wire   [0:0] m2s_enb_clrsts;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
wire   [31:0] gmem0_RDATA;
wire   [8:0] gmem0_RFIFONUM;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
wire    gmem1_AWREADY;
wire    gmem1_WREADY;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [31:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [8:0] gmem1_RFIFONUM;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_start_full_n;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire    entry_proc_U0_start_out;
wire    entry_proc_U0_start_write;
wire   [0:0] entry_proc_U0_s2m_sts_clear;
wire   [0:0] entry_proc_U0_s2m_sts_clear_c_din;
wire    entry_proc_U0_s2m_sts_clear_c_write;
wire   [63:0] entry_proc_U0_s2mbuf_c_din;
wire    entry_proc_U0_s2mbuf_c_write;
wire   [0:0] entry_proc_U0_m2s_sts_clear;
wire   [0:0] entry_proc_U0_m2s_sts_clear_c_din;
wire    entry_proc_U0_m2s_sts_clear_c_write;
wire    getinstream_U0_ap_start;
wire    getinstream_U0_ap_done;
wire    getinstream_U0_ap_continue;
wire    getinstream_U0_ap_idle;
wire    getinstream_U0_ap_ready;
wire    getinstream_U0_inStreamTop_TREADY;
wire   [0:0] getinstream_U0_s2m_err;
wire    getinstream_U0_s2m_err_ap_vld;
wire   [32:0] getinstream_U0_inbuf_din;
wire    getinstream_U0_inbuf_write;
wire   [31:0] getinstream_U0_incount47_din;
wire    getinstream_U0_incount47_write;
wire   [31:0] getinstream_U0_s2m_len_c_din;
wire    getinstream_U0_s2m_len_c_write;
wire   [0:0] getinstream_U0_s2m_enb_clrsts_c_din;
wire    getinstream_U0_s2m_enb_clrsts_c_write;
wire    streamtoparallelwithburst_U0_ap_start;
wire    streamtoparallelwithburst_U0_ap_done;
wire    streamtoparallelwithburst_U0_ap_continue;
wire    streamtoparallelwithburst_U0_ap_idle;
wire    streamtoparallelwithburst_U0_ap_ready;
wire    streamtoparallelwithburst_U0_inbuf_read;
wire    streamtoparallelwithburst_U0_incount47_read;
wire    streamtoparallelwithburst_U0_in_en_clrsts_read;
wire   [0:0] streamtoparallelwithburst_U0_s2m_buf_sts;
wire    streamtoparallelwithburst_U0_s2m_buf_sts_ap_vld;
wire    streamtoparallelwithburst_U0_sts_clear_read;
wire    streamtoparallelwithburst_U0_in_s2m_len_read;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_AWVALID;
wire   [63:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWADDR;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWID;
wire   [31:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWLEN;
wire   [2:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWSIZE;
wire   [1:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWBURST;
wire   [1:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWLOCK;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWCACHE;
wire   [2:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWPROT;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWQOS;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWREGION;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_AWUSER;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_WVALID;
wire   [31:0] streamtoparallelwithburst_U0_m_axi_gmem0_WDATA;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_WSTRB;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_WLAST;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_WID;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_WUSER;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_ARVALID;
wire   [63:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARADDR;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARID;
wire   [31:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARLEN;
wire   [2:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARSIZE;
wire   [1:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARBURST;
wire   [1:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARLOCK;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARCACHE;
wire   [2:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARPROT;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARQOS;
wire   [3:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARREGION;
wire   [0:0] streamtoparallelwithburst_U0_m_axi_gmem0_ARUSER;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_RREADY;
wire    streamtoparallelwithburst_U0_m_axi_gmem0_BREADY;
wire    streamtoparallelwithburst_U0_out_memory_read;
wire    paralleltostreamwithburst_U0_ap_start;
wire    paralleltostreamwithburst_U0_ap_done;
wire    paralleltostreamwithburst_U0_ap_continue;
wire    paralleltostreamwithburst_U0_ap_idle;
wire    paralleltostreamwithburst_U0_ap_ready;
wire    paralleltostreamwithburst_U0_m_axi_gmem1_AWVALID;
wire   [63:0] paralleltostreamwithburst_U0_m_axi_gmem1_AWADDR;
wire   [0:0] paralleltostreamwithburst_U0_m_axi_gmem1_AWID;
wire   [31:0] paralleltostreamwithburst_U0_m_axi_gmem1_AWLEN;
wire   [2:0] paralleltostreamwithburst_U0_m_axi_gmem1_AWSIZE;
wire   [1:0] paralleltostreamwithburst_U0_m_axi_gmem1_AWBURST;
wire   [1:0] paralleltostreamwithburst_U0_m_axi_gmem1_AWLOCK;
wire   [3:0] paralleltostreamwithburst_U0_m_axi_gmem1_AWCACHE;
wire   [2:0] paralleltostreamwithburst_U0_m_axi_gmem1_AWPROT;
wire   [3:0] paralleltostreamwithburst_U0_m_axi_gmem1_AWQOS;
wire   [3:0] paralleltostreamwithburst_U0_m_axi_gmem1_AWREGION;
wire   [0:0] paralleltostreamwithburst_U0_m_axi_gmem1_AWUSER;
wire    paralleltostreamwithburst_U0_m_axi_gmem1_WVALID;
wire   [31:0] paralleltostreamwithburst_U0_m_axi_gmem1_WDATA;
wire   [3:0] paralleltostreamwithburst_U0_m_axi_gmem1_WSTRB;
wire    paralleltostreamwithburst_U0_m_axi_gmem1_WLAST;
wire   [0:0] paralleltostreamwithburst_U0_m_axi_gmem1_WID;
wire   [0:0] paralleltostreamwithburst_U0_m_axi_gmem1_WUSER;
wire    paralleltostreamwithburst_U0_m_axi_gmem1_ARVALID;
wire   [63:0] paralleltostreamwithburst_U0_m_axi_gmem1_ARADDR;
wire   [0:0] paralleltostreamwithburst_U0_m_axi_gmem1_ARID;
wire   [31:0] paralleltostreamwithburst_U0_m_axi_gmem1_ARLEN;
wire   [2:0] paralleltostreamwithburst_U0_m_axi_gmem1_ARSIZE;
wire   [1:0] paralleltostreamwithburst_U0_m_axi_gmem1_ARBURST;
wire   [1:0] paralleltostreamwithburst_U0_m_axi_gmem1_ARLOCK;
wire   [3:0] paralleltostreamwithburst_U0_m_axi_gmem1_ARCACHE;
wire   [2:0] paralleltostreamwithburst_U0_m_axi_gmem1_ARPROT;
wire   [3:0] paralleltostreamwithburst_U0_m_axi_gmem1_ARQOS;
wire   [3:0] paralleltostreamwithburst_U0_m_axi_gmem1_ARREGION;
wire   [0:0] paralleltostreamwithburst_U0_m_axi_gmem1_ARUSER;
wire    paralleltostreamwithburst_U0_m_axi_gmem1_RREADY;
wire    paralleltostreamwithburst_U0_m_axi_gmem1_BREADY;
wire   [39:0] paralleltostreamwithburst_U0_outbuf_din;
wire    paralleltostreamwithburst_U0_outbuf_write;
wire   [31:0] paralleltostreamwithburst_U0_outcount48_din;
wire    paralleltostreamwithburst_U0_outcount48_write;
wire   [0:0] paralleltostreamwithburst_U0_m2s_enb_clrsts_c_din;
wire    paralleltostreamwithburst_U0_m2s_enb_clrsts_c_write;
wire    sendoutstream_U0_ap_start;
wire    sendoutstream_U0_ap_done;
wire    sendoutstream_U0_ap_continue;
wire    sendoutstream_U0_ap_idle;
wire    sendoutstream_U0_ap_ready;
wire    sendoutstream_U0_outbuf_read;
wire    sendoutstream_U0_outcount48_read;
wire    sendoutstream_U0_in_en_clrsts_read;
wire   [0:0] sendoutstream_U0_m2s_buf_sts;
wire    sendoutstream_U0_m2s_buf_sts_ap_vld;
wire    sendoutstream_U0_sts_clear_read;
wire   [31:0] sendoutstream_U0_outStreamTop_TDATA;
wire    sendoutstream_U0_outStreamTop_TVALID;
wire   [3:0] sendoutstream_U0_outStreamTop_TKEEP;
wire   [3:0] sendoutstream_U0_outStreamTop_TSTRB;
wire   [6:0] sendoutstream_U0_outStreamTop_TUSER;
wire   [0:0] sendoutstream_U0_outStreamTop_TLAST;
wire    s2m_sts_clear_c_full_n;
wire   [0:0] s2m_sts_clear_c_dout;
wire   [2:0] s2m_sts_clear_c_num_data_valid;
wire   [2:0] s2m_sts_clear_c_fifo_cap;
wire    s2m_sts_clear_c_empty_n;
wire    s2mbuf_c_full_n;
wire   [63:0] s2mbuf_c_dout;
wire   [2:0] s2mbuf_c_num_data_valid;
wire   [2:0] s2mbuf_c_fifo_cap;
wire    s2mbuf_c_empty_n;
wire    m2s_sts_clear_c_full_n;
wire   [0:0] m2s_sts_clear_c_dout;
wire   [2:0] m2s_sts_clear_c_num_data_valid;
wire   [2:0] m2s_sts_clear_c_fifo_cap;
wire    m2s_sts_clear_c_empty_n;
wire    inbuf_full_n;
wire   [32:0] inbuf_dout;
wire   [7:0] inbuf_num_data_valid;
wire   [7:0] inbuf_fifo_cap;
wire    inbuf_empty_n;
wire    incount_full_n;
wire   [31:0] incount_dout;
wire   [3:0] incount_num_data_valid;
wire   [3:0] incount_fifo_cap;
wire    incount_empty_n;
wire    s2m_len_c_full_n;
wire   [31:0] s2m_len_c_dout;
wire   [1:0] s2m_len_c_num_data_valid;
wire   [1:0] s2m_len_c_fifo_cap;
wire    s2m_len_c_empty_n;
wire    s2m_enb_clrsts_c_full_n;
wire   [0:0] s2m_enb_clrsts_c_dout;
wire   [1:0] s2m_enb_clrsts_c_num_data_valid;
wire   [1:0] s2m_enb_clrsts_c_fifo_cap;
wire    s2m_enb_clrsts_c_empty_n;
wire    outbuf_full_n;
wire   [39:0] outbuf_dout;
wire   [7:0] outbuf_num_data_valid;
wire   [7:0] outbuf_fifo_cap;
wire    outbuf_empty_n;
wire    outcount_full_n;
wire   [31:0] outcount_dout;
wire   [3:0] outcount_num_data_valid;
wire   [3:0] outcount_fifo_cap;
wire    outcount_empty_n;
wire    m2s_enb_clrsts_c_full_n;
wire   [0:0] m2s_enb_clrsts_c_dout;
wire   [1:0] m2s_enb_clrsts_c_num_data_valid;
wire   [1:0] m2s_enb_clrsts_c_fifo_cap;
wire    m2s_enb_clrsts_c_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_getinstream_U0_ap_ready;
wire    ap_sync_getinstream_U0_ap_ready;
reg    ap_sync_reg_paralleltostreamwithburst_U0_ap_ready;
wire    ap_sync_paralleltostreamwithburst_U0_ap_ready;
wire   [0:0] start_for_streamtoparallelwithburst_U0_din;
wire    start_for_streamtoparallelwithburst_U0_full_n;
wire   [0:0] start_for_streamtoparallelwithburst_U0_dout;
wire    start_for_streamtoparallelwithburst_U0_empty_n;
wire   [0:0] start_for_sendoutstream_U0_din;
wire    start_for_sendoutstream_U0_full_n;
wire   [0:0] start_for_sendoutstream_U0_dout;
wire    start_for_sendoutstream_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_getinstream_U0_ap_ready = 1'b0;
#0 ap_sync_reg_paralleltostreamwithburst_U0_ap_ready = 1'b0;
end

userdma_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .s2m_buf_sts(s2m_buf_sts),
    .s2m_buf_sts_ap_vld(streamtoparallelwithburst_U0_s2m_buf_sts_ap_vld),
    .s2m_sts_clear(s2m_sts_clear),
    .s2m_len(s2m_len),
    .s2m_enb_clrsts(s2m_enb_clrsts),
    .s2mbuf(s2mbuf),
    .s2m_err(s2m_err),
    .s2m_err_ap_vld(getinstream_U0_s2m_err_ap_vld),
    .Img_width(Img_width),
    .m2sbuf(m2sbuf),
    .m2s_buf_sts(m2s_buf_sts),
    .m2s_buf_sts_ap_vld(sendoutstream_U0_m2s_buf_sts_ap_vld),
    .m2s_sts_clear(m2s_sts_clear),
    .m2s_len(m2s_len),
    .m2s_enb_clrsts(m2s_enb_clrsts),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

userdma_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 15 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 64 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem0_RDATA),
    .I_RFIFONUM(gmem0_RFIFONUM),
    .I_AWVALID(streamtoparallelwithburst_U0_m_axi_gmem0_AWVALID),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(streamtoparallelwithburst_U0_m_axi_gmem0_AWADDR),
    .I_AWLEN(streamtoparallelwithburst_U0_m_axi_gmem0_AWLEN),
    .I_WVALID(streamtoparallelwithburst_U0_m_axi_gmem0_WVALID),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(streamtoparallelwithburst_U0_m_axi_gmem0_WDATA),
    .I_WSTRB(streamtoparallelwithburst_U0_m_axi_gmem0_WSTRB),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(streamtoparallelwithburst_U0_m_axi_gmem0_BREADY)
);

userdma_gmem1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 15 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 64 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(paralleltostreamwithburst_U0_m_axi_gmem1_ARVALID),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(paralleltostreamwithburst_U0_m_axi_gmem1_ARADDR),
    .I_ARLEN(paralleltostreamwithburst_U0_m_axi_gmem1_ARLEN),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(paralleltostreamwithburst_U0_m_axi_gmem1_RREADY),
    .I_RDATA(gmem1_RDATA),
    .I_RFIFONUM(gmem1_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(1'b0)
);

userdma_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .start_full_n(entry_proc_U0_start_full_n),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .start_out(entry_proc_U0_start_out),
    .start_write(entry_proc_U0_start_write),
    .s2m_sts_clear(entry_proc_U0_s2m_sts_clear),
    .s2m_sts_clear_c_din(entry_proc_U0_s2m_sts_clear_c_din),
    .s2m_sts_clear_c_num_data_valid(s2m_sts_clear_c_num_data_valid),
    .s2m_sts_clear_c_fifo_cap(s2m_sts_clear_c_fifo_cap),
    .s2m_sts_clear_c_full_n(s2m_sts_clear_c_full_n),
    .s2m_sts_clear_c_write(entry_proc_U0_s2m_sts_clear_c_write),
    .s2mbuf(s2mbuf),
    .s2mbuf_c_din(entry_proc_U0_s2mbuf_c_din),
    .s2mbuf_c_num_data_valid(s2mbuf_c_num_data_valid),
    .s2mbuf_c_fifo_cap(s2mbuf_c_fifo_cap),
    .s2mbuf_c_full_n(s2mbuf_c_full_n),
    .s2mbuf_c_write(entry_proc_U0_s2mbuf_c_write),
    .m2s_sts_clear(entry_proc_U0_m2s_sts_clear),
    .m2s_sts_clear_c_din(entry_proc_U0_m2s_sts_clear_c_din),
    .m2s_sts_clear_c_num_data_valid(m2s_sts_clear_c_num_data_valid),
    .m2s_sts_clear_c_fifo_cap(m2s_sts_clear_c_fifo_cap),
    .m2s_sts_clear_c_full_n(m2s_sts_clear_c_full_n),
    .m2s_sts_clear_c_write(entry_proc_U0_m2s_sts_clear_c_write)
);

userdma_getinstream getinstream_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(getinstream_U0_ap_start),
    .ap_done(getinstream_U0_ap_done),
    .ap_continue(getinstream_U0_ap_continue),
    .ap_idle(getinstream_U0_ap_idle),
    .ap_ready(getinstream_U0_ap_ready),
    .inStreamTop_TDATA(inStreamTop_TDATA),
    .inStreamTop_TVALID(inStreamTop_TVALID),
    .inStreamTop_TREADY(getinstream_U0_inStreamTop_TREADY),
    .inStreamTop_TKEEP(inStreamTop_TKEEP),
    .inStreamTop_TSTRB(inStreamTop_TSTRB),
    .inStreamTop_TUSER(inStreamTop_TUSER),
    .inStreamTop_TLAST(inStreamTop_TLAST),
    .in_en_clrsts(s2m_enb_clrsts),
    .in_s2m_len(s2m_len),
    .s2m_err(getinstream_U0_s2m_err),
    .s2m_err_ap_vld(getinstream_U0_s2m_err_ap_vld),
    .in_Img_width(Img_width),
    .inbuf_din(getinstream_U0_inbuf_din),
    .inbuf_num_data_valid(inbuf_num_data_valid),
    .inbuf_fifo_cap(inbuf_fifo_cap),
    .inbuf_full_n(inbuf_full_n),
    .inbuf_write(getinstream_U0_inbuf_write),
    .incount47_din(getinstream_U0_incount47_din),
    .incount47_num_data_valid(incount_num_data_valid),
    .incount47_fifo_cap(incount_fifo_cap),
    .incount47_full_n(incount_full_n),
    .incount47_write(getinstream_U0_incount47_write),
    .s2m_len_c_din(getinstream_U0_s2m_len_c_din),
    .s2m_len_c_num_data_valid(s2m_len_c_num_data_valid),
    .s2m_len_c_fifo_cap(s2m_len_c_fifo_cap),
    .s2m_len_c_full_n(s2m_len_c_full_n),
    .s2m_len_c_write(getinstream_U0_s2m_len_c_write),
    .s2m_enb_clrsts_c_din(getinstream_U0_s2m_enb_clrsts_c_din),
    .s2m_enb_clrsts_c_num_data_valid(s2m_enb_clrsts_c_num_data_valid),
    .s2m_enb_clrsts_c_fifo_cap(s2m_enb_clrsts_c_fifo_cap),
    .s2m_enb_clrsts_c_full_n(s2m_enb_clrsts_c_full_n),
    .s2m_enb_clrsts_c_write(getinstream_U0_s2m_enb_clrsts_c_write)
);

userdma_streamtoparallelwithburst streamtoparallelwithburst_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(streamtoparallelwithburst_U0_ap_start),
    .ap_done(streamtoparallelwithburst_U0_ap_done),
    .ap_continue(streamtoparallelwithburst_U0_ap_continue),
    .ap_idle(streamtoparallelwithburst_U0_ap_idle),
    .ap_ready(streamtoparallelwithburst_U0_ap_ready),
    .inbuf_dout(inbuf_dout),
    .inbuf_num_data_valid(inbuf_num_data_valid),
    .inbuf_fifo_cap(inbuf_fifo_cap),
    .inbuf_empty_n(inbuf_empty_n),
    .inbuf_read(streamtoparallelwithburst_U0_inbuf_read),
    .incount47_dout(incount_dout),
    .incount47_num_data_valid(incount_num_data_valid),
    .incount47_fifo_cap(incount_fifo_cap),
    .incount47_empty_n(incount_empty_n),
    .incount47_read(streamtoparallelwithburst_U0_incount47_read),
    .in_en_clrsts_dout(s2m_enb_clrsts_c_dout),
    .in_en_clrsts_num_data_valid(s2m_enb_clrsts_c_num_data_valid),
    .in_en_clrsts_fifo_cap(s2m_enb_clrsts_c_fifo_cap),
    .in_en_clrsts_empty_n(s2m_enb_clrsts_c_empty_n),
    .in_en_clrsts_read(streamtoparallelwithburst_U0_in_en_clrsts_read),
    .s2m_buf_sts(streamtoparallelwithburst_U0_s2m_buf_sts),
    .s2m_buf_sts_ap_vld(streamtoparallelwithburst_U0_s2m_buf_sts_ap_vld),
    .sts_clear_dout(s2m_sts_clear_c_dout),
    .sts_clear_num_data_valid(s2m_sts_clear_c_num_data_valid),
    .sts_clear_fifo_cap(s2m_sts_clear_c_fifo_cap),
    .sts_clear_empty_n(s2m_sts_clear_c_empty_n),
    .sts_clear_read(streamtoparallelwithburst_U0_sts_clear_read),
    .in_s2m_len_dout(s2m_len_c_dout),
    .in_s2m_len_num_data_valid(s2m_len_c_num_data_valid),
    .in_s2m_len_fifo_cap(s2m_len_c_fifo_cap),
    .in_s2m_len_empty_n(s2m_len_c_empty_n),
    .in_s2m_len_read(streamtoparallelwithburst_U0_in_s2m_len_read),
    .m_axi_gmem0_AWVALID(streamtoparallelwithburst_U0_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(gmem0_AWREADY),
    .m_axi_gmem0_AWADDR(streamtoparallelwithburst_U0_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(streamtoparallelwithburst_U0_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(streamtoparallelwithburst_U0_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(streamtoparallelwithburst_U0_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(streamtoparallelwithburst_U0_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(streamtoparallelwithburst_U0_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(streamtoparallelwithburst_U0_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(streamtoparallelwithburst_U0_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(streamtoparallelwithburst_U0_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(streamtoparallelwithburst_U0_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(streamtoparallelwithburst_U0_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(streamtoparallelwithburst_U0_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(gmem0_WREADY),
    .m_axi_gmem0_WDATA(streamtoparallelwithburst_U0_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(streamtoparallelwithburst_U0_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(streamtoparallelwithburst_U0_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(streamtoparallelwithburst_U0_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(streamtoparallelwithburst_U0_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(streamtoparallelwithburst_U0_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(1'b0),
    .m_axi_gmem0_ARADDR(streamtoparallelwithburst_U0_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(streamtoparallelwithburst_U0_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(streamtoparallelwithburst_U0_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(streamtoparallelwithburst_U0_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(streamtoparallelwithburst_U0_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(streamtoparallelwithburst_U0_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(streamtoparallelwithburst_U0_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(streamtoparallelwithburst_U0_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(streamtoparallelwithburst_U0_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(streamtoparallelwithburst_U0_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(streamtoparallelwithburst_U0_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(1'b0),
    .m_axi_gmem0_RREADY(streamtoparallelwithburst_U0_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(32'd0),
    .m_axi_gmem0_RLAST(1'b0),
    .m_axi_gmem0_RID(1'd0),
    .m_axi_gmem0_RFIFONUM(9'd0),
    .m_axi_gmem0_RUSER(1'd0),
    .m_axi_gmem0_RRESP(2'd0),
    .m_axi_gmem0_BVALID(gmem0_BVALID),
    .m_axi_gmem0_BREADY(streamtoparallelwithburst_U0_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(gmem0_BRESP),
    .m_axi_gmem0_BID(gmem0_BID),
    .m_axi_gmem0_BUSER(gmem0_BUSER),
    .out_memory_dout(s2mbuf_c_dout),
    .out_memory_num_data_valid(s2mbuf_c_num_data_valid),
    .out_memory_fifo_cap(s2mbuf_c_fifo_cap),
    .out_memory_empty_n(s2mbuf_c_empty_n),
    .out_memory_read(streamtoparallelwithburst_U0_out_memory_read)
);

userdma_paralleltostreamwithburst paralleltostreamwithburst_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(paralleltostreamwithburst_U0_ap_start),
    .ap_done(paralleltostreamwithburst_U0_ap_done),
    .ap_continue(paralleltostreamwithburst_U0_ap_continue),
    .ap_idle(paralleltostreamwithburst_U0_ap_idle),
    .ap_ready(paralleltostreamwithburst_U0_ap_ready),
    .m_axi_gmem1_AWVALID(paralleltostreamwithburst_U0_m_axi_gmem1_AWVALID),
    .m_axi_gmem1_AWREADY(1'b0),
    .m_axi_gmem1_AWADDR(paralleltostreamwithburst_U0_m_axi_gmem1_AWADDR),
    .m_axi_gmem1_AWID(paralleltostreamwithburst_U0_m_axi_gmem1_AWID),
    .m_axi_gmem1_AWLEN(paralleltostreamwithburst_U0_m_axi_gmem1_AWLEN),
    .m_axi_gmem1_AWSIZE(paralleltostreamwithburst_U0_m_axi_gmem1_AWSIZE),
    .m_axi_gmem1_AWBURST(paralleltostreamwithburst_U0_m_axi_gmem1_AWBURST),
    .m_axi_gmem1_AWLOCK(paralleltostreamwithburst_U0_m_axi_gmem1_AWLOCK),
    .m_axi_gmem1_AWCACHE(paralleltostreamwithburst_U0_m_axi_gmem1_AWCACHE),
    .m_axi_gmem1_AWPROT(paralleltostreamwithburst_U0_m_axi_gmem1_AWPROT),
    .m_axi_gmem1_AWQOS(paralleltostreamwithburst_U0_m_axi_gmem1_AWQOS),
    .m_axi_gmem1_AWREGION(paralleltostreamwithburst_U0_m_axi_gmem1_AWREGION),
    .m_axi_gmem1_AWUSER(paralleltostreamwithburst_U0_m_axi_gmem1_AWUSER),
    .m_axi_gmem1_WVALID(paralleltostreamwithburst_U0_m_axi_gmem1_WVALID),
    .m_axi_gmem1_WREADY(1'b0),
    .m_axi_gmem1_WDATA(paralleltostreamwithburst_U0_m_axi_gmem1_WDATA),
    .m_axi_gmem1_WSTRB(paralleltostreamwithburst_U0_m_axi_gmem1_WSTRB),
    .m_axi_gmem1_WLAST(paralleltostreamwithburst_U0_m_axi_gmem1_WLAST),
    .m_axi_gmem1_WID(paralleltostreamwithburst_U0_m_axi_gmem1_WID),
    .m_axi_gmem1_WUSER(paralleltostreamwithburst_U0_m_axi_gmem1_WUSER),
    .m_axi_gmem1_ARVALID(paralleltostreamwithburst_U0_m_axi_gmem1_ARVALID),
    .m_axi_gmem1_ARREADY(gmem1_ARREADY),
    .m_axi_gmem1_ARADDR(paralleltostreamwithburst_U0_m_axi_gmem1_ARADDR),
    .m_axi_gmem1_ARID(paralleltostreamwithburst_U0_m_axi_gmem1_ARID),
    .m_axi_gmem1_ARLEN(paralleltostreamwithburst_U0_m_axi_gmem1_ARLEN),
    .m_axi_gmem1_ARSIZE(paralleltostreamwithburst_U0_m_axi_gmem1_ARSIZE),
    .m_axi_gmem1_ARBURST(paralleltostreamwithburst_U0_m_axi_gmem1_ARBURST),
    .m_axi_gmem1_ARLOCK(paralleltostreamwithburst_U0_m_axi_gmem1_ARLOCK),
    .m_axi_gmem1_ARCACHE(paralleltostreamwithburst_U0_m_axi_gmem1_ARCACHE),
    .m_axi_gmem1_ARPROT(paralleltostreamwithburst_U0_m_axi_gmem1_ARPROT),
    .m_axi_gmem1_ARQOS(paralleltostreamwithburst_U0_m_axi_gmem1_ARQOS),
    .m_axi_gmem1_ARREGION(paralleltostreamwithburst_U0_m_axi_gmem1_ARREGION),
    .m_axi_gmem1_ARUSER(paralleltostreamwithburst_U0_m_axi_gmem1_ARUSER),
    .m_axi_gmem1_RVALID(gmem1_RVALID),
    .m_axi_gmem1_RREADY(paralleltostreamwithburst_U0_m_axi_gmem1_RREADY),
    .m_axi_gmem1_RDATA(gmem1_RDATA),
    .m_axi_gmem1_RLAST(gmem1_RLAST),
    .m_axi_gmem1_RID(gmem1_RID),
    .m_axi_gmem1_RFIFONUM(gmem1_RFIFONUM),
    .m_axi_gmem1_RUSER(gmem1_RUSER),
    .m_axi_gmem1_RRESP(gmem1_RRESP),
    .m_axi_gmem1_BVALID(1'b0),
    .m_axi_gmem1_BREADY(paralleltostreamwithburst_U0_m_axi_gmem1_BREADY),
    .m_axi_gmem1_BRESP(2'd0),
    .m_axi_gmem1_BID(1'd0),
    .m_axi_gmem1_BUSER(1'd0),
    .in_memory(m2sbuf),
    .in_en_clrsts(m2s_enb_clrsts),
    .in_Img_width(Img_width),
    .in_m2s_len(m2s_len),
    .outbuf_din(paralleltostreamwithburst_U0_outbuf_din),
    .outbuf_num_data_valid(outbuf_num_data_valid),
    .outbuf_fifo_cap(outbuf_fifo_cap),
    .outbuf_full_n(outbuf_full_n),
    .outbuf_write(paralleltostreamwithburst_U0_outbuf_write),
    .outcount48_din(paralleltostreamwithburst_U0_outcount48_din),
    .outcount48_num_data_valid(outcount_num_data_valid),
    .outcount48_fifo_cap(outcount_fifo_cap),
    .outcount48_full_n(outcount_full_n),
    .outcount48_write(paralleltostreamwithburst_U0_outcount48_write),
    .m2s_enb_clrsts_c_din(paralleltostreamwithburst_U0_m2s_enb_clrsts_c_din),
    .m2s_enb_clrsts_c_num_data_valid(m2s_enb_clrsts_c_num_data_valid),
    .m2s_enb_clrsts_c_fifo_cap(m2s_enb_clrsts_c_fifo_cap),
    .m2s_enb_clrsts_c_full_n(m2s_enb_clrsts_c_full_n),
    .m2s_enb_clrsts_c_write(paralleltostreamwithburst_U0_m2s_enb_clrsts_c_write)
);

userdma_sendoutstream sendoutstream_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(sendoutstream_U0_ap_start),
    .ap_done(sendoutstream_U0_ap_done),
    .ap_continue(sendoutstream_U0_ap_continue),
    .ap_idle(sendoutstream_U0_ap_idle),
    .ap_ready(sendoutstream_U0_ap_ready),
    .outbuf_dout(outbuf_dout),
    .outbuf_num_data_valid(outbuf_num_data_valid),
    .outbuf_fifo_cap(outbuf_fifo_cap),
    .outbuf_empty_n(outbuf_empty_n),
    .outbuf_read(sendoutstream_U0_outbuf_read),
    .outcount48_dout(outcount_dout),
    .outcount48_num_data_valid(outcount_num_data_valid),
    .outcount48_fifo_cap(outcount_fifo_cap),
    .outcount48_empty_n(outcount_empty_n),
    .outcount48_read(sendoutstream_U0_outcount48_read),
    .in_en_clrsts_dout(m2s_enb_clrsts_c_dout),
    .in_en_clrsts_num_data_valid(m2s_enb_clrsts_c_num_data_valid),
    .in_en_clrsts_fifo_cap(m2s_enb_clrsts_c_fifo_cap),
    .in_en_clrsts_empty_n(m2s_enb_clrsts_c_empty_n),
    .in_en_clrsts_read(sendoutstream_U0_in_en_clrsts_read),
    .m2s_buf_sts(sendoutstream_U0_m2s_buf_sts),
    .m2s_buf_sts_ap_vld(sendoutstream_U0_m2s_buf_sts_ap_vld),
    .sts_clear_dout(m2s_sts_clear_c_dout),
    .sts_clear_num_data_valid(m2s_sts_clear_c_num_data_valid),
    .sts_clear_fifo_cap(m2s_sts_clear_c_fifo_cap),
    .sts_clear_empty_n(m2s_sts_clear_c_empty_n),
    .sts_clear_read(sendoutstream_U0_sts_clear_read),
    .outStreamTop_TDATA(sendoutstream_U0_outStreamTop_TDATA),
    .outStreamTop_TVALID(sendoutstream_U0_outStreamTop_TVALID),
    .outStreamTop_TREADY(outStreamTop_TREADY),
    .outStreamTop_TKEEP(sendoutstream_U0_outStreamTop_TKEEP),
    .outStreamTop_TSTRB(sendoutstream_U0_outStreamTop_TSTRB),
    .outStreamTop_TUSER(sendoutstream_U0_outStreamTop_TUSER),
    .outStreamTop_TLAST(sendoutstream_U0_outStreamTop_TLAST)
);

userdma_fifo_w1_d3_S s2m_sts_clear_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_s2m_sts_clear_c_din),
    .if_full_n(s2m_sts_clear_c_full_n),
    .if_write(entry_proc_U0_s2m_sts_clear_c_write),
    .if_dout(s2m_sts_clear_c_dout),
    .if_num_data_valid(s2m_sts_clear_c_num_data_valid),
    .if_fifo_cap(s2m_sts_clear_c_fifo_cap),
    .if_empty_n(s2m_sts_clear_c_empty_n),
    .if_read(streamtoparallelwithburst_U0_sts_clear_read)
);

userdma_fifo_w64_d3_S s2mbuf_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_s2mbuf_c_din),
    .if_full_n(s2mbuf_c_full_n),
    .if_write(entry_proc_U0_s2mbuf_c_write),
    .if_dout(s2mbuf_c_dout),
    .if_num_data_valid(s2mbuf_c_num_data_valid),
    .if_fifo_cap(s2mbuf_c_fifo_cap),
    .if_empty_n(s2mbuf_c_empty_n),
    .if_read(streamtoparallelwithburst_U0_out_memory_read)
);

userdma_fifo_w1_d3_S m2s_sts_clear_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_m2s_sts_clear_c_din),
    .if_full_n(m2s_sts_clear_c_full_n),
    .if_write(entry_proc_U0_m2s_sts_clear_c_write),
    .if_dout(m2s_sts_clear_c_dout),
    .if_num_data_valid(m2s_sts_clear_c_num_data_valid),
    .if_fifo_cap(m2s_sts_clear_c_fifo_cap),
    .if_empty_n(m2s_sts_clear_c_empty_n),
    .if_read(sendoutstream_U0_sts_clear_read)
);

userdma_fifo_w33_d128_A inbuf_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(getinstream_U0_inbuf_din),
    .if_full_n(inbuf_full_n),
    .if_write(getinstream_U0_inbuf_write),
    .if_dout(inbuf_dout),
    .if_num_data_valid(inbuf_num_data_valid),
    .if_fifo_cap(inbuf_fifo_cap),
    .if_empty_n(inbuf_empty_n),
    .if_read(streamtoparallelwithburst_U0_inbuf_read)
);

userdma_fifo_w32_d8_S incount_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(getinstream_U0_incount47_din),
    .if_full_n(incount_full_n),
    .if_write(getinstream_U0_incount47_write),
    .if_dout(incount_dout),
    .if_num_data_valid(incount_num_data_valid),
    .if_fifo_cap(incount_fifo_cap),
    .if_empty_n(incount_empty_n),
    .if_read(streamtoparallelwithburst_U0_incount47_read)
);

userdma_fifo_w32_d2_S s2m_len_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(getinstream_U0_s2m_len_c_din),
    .if_full_n(s2m_len_c_full_n),
    .if_write(getinstream_U0_s2m_len_c_write),
    .if_dout(s2m_len_c_dout),
    .if_num_data_valid(s2m_len_c_num_data_valid),
    .if_fifo_cap(s2m_len_c_fifo_cap),
    .if_empty_n(s2m_len_c_empty_n),
    .if_read(streamtoparallelwithburst_U0_in_s2m_len_read)
);

userdma_fifo_w1_d2_S s2m_enb_clrsts_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(getinstream_U0_s2m_enb_clrsts_c_din),
    .if_full_n(s2m_enb_clrsts_c_full_n),
    .if_write(getinstream_U0_s2m_enb_clrsts_c_write),
    .if_dout(s2m_enb_clrsts_c_dout),
    .if_num_data_valid(s2m_enb_clrsts_c_num_data_valid),
    .if_fifo_cap(s2m_enb_clrsts_c_fifo_cap),
    .if_empty_n(s2m_enb_clrsts_c_empty_n),
    .if_read(streamtoparallelwithburst_U0_in_en_clrsts_read)
);

userdma_fifo_w40_d128_A outbuf_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(paralleltostreamwithburst_U0_outbuf_din),
    .if_full_n(outbuf_full_n),
    .if_write(paralleltostreamwithburst_U0_outbuf_write),
    .if_dout(outbuf_dout),
    .if_num_data_valid(outbuf_num_data_valid),
    .if_fifo_cap(outbuf_fifo_cap),
    .if_empty_n(outbuf_empty_n),
    .if_read(sendoutstream_U0_outbuf_read)
);

userdma_fifo_w32_d8_S outcount_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(paralleltostreamwithburst_U0_outcount48_din),
    .if_full_n(outcount_full_n),
    .if_write(paralleltostreamwithburst_U0_outcount48_write),
    .if_dout(outcount_dout),
    .if_num_data_valid(outcount_num_data_valid),
    .if_fifo_cap(outcount_fifo_cap),
    .if_empty_n(outcount_empty_n),
    .if_read(sendoutstream_U0_outcount48_read)
);

userdma_fifo_w1_d2_S m2s_enb_clrsts_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(paralleltostreamwithburst_U0_m2s_enb_clrsts_c_din),
    .if_full_n(m2s_enb_clrsts_c_full_n),
    .if_write(paralleltostreamwithburst_U0_m2s_enb_clrsts_c_write),
    .if_dout(m2s_enb_clrsts_c_dout),
    .if_num_data_valid(m2s_enb_clrsts_c_num_data_valid),
    .if_fifo_cap(m2s_enb_clrsts_c_fifo_cap),
    .if_empty_n(m2s_enb_clrsts_c_empty_n),
    .if_read(sendoutstream_U0_in_en_clrsts_read)
);

userdma_start_for_streamtoparallelwithburst_U0 start_for_streamtoparallelwithburst_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_streamtoparallelwithburst_U0_din),
    .if_full_n(start_for_streamtoparallelwithburst_U0_full_n),
    .if_write(entry_proc_U0_start_write),
    .if_dout(start_for_streamtoparallelwithburst_U0_dout),
    .if_empty_n(start_for_streamtoparallelwithburst_U0_empty_n),
    .if_read(streamtoparallelwithburst_U0_ap_ready)
);

userdma_start_for_sendoutstream_U0 start_for_sendoutstream_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_sendoutstream_U0_din),
    .if_full_n(start_for_sendoutstream_U0_full_n),
    .if_write(entry_proc_U0_start_write),
    .if_dout(start_for_sendoutstream_U0_dout),
    .if_empty_n(start_for_sendoutstream_U0_empty_n),
    .if_read(sendoutstream_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_getinstream_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_getinstream_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_getinstream_U0_ap_ready <= ap_sync_getinstream_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_paralleltostreamwithburst_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_paralleltostreamwithburst_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_paralleltostreamwithburst_U0_ap_ready <= ap_sync_paralleltostreamwithburst_U0_ap_ready;
        end
    end
end

assign ap_done = ap_sync_done;

assign ap_idle = (streamtoparallelwithburst_U0_ap_idle & sendoutstream_U0_ap_idle & paralleltostreamwithburst_U0_ap_idle & getinstream_U0_ap_idle & entry_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_done = (streamtoparallelwithburst_U0_ap_done & sendoutstream_U0_ap_done & getinstream_U0_ap_done);

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_getinstream_U0_ap_ready = (getinstream_U0_ap_ready | ap_sync_reg_getinstream_U0_ap_ready);

assign ap_sync_paralleltostreamwithburst_U0_ap_ready = (paralleltostreamwithburst_U0_ap_ready | ap_sync_reg_paralleltostreamwithburst_U0_ap_ready);

assign ap_sync_ready = (ap_sync_paralleltostreamwithburst_U0_ap_ready & ap_sync_getinstream_U0_ap_ready & ap_sync_entry_proc_U0_ap_ready);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign entry_proc_U0_m2s_sts_clear = m2s_sts_clear;

assign entry_proc_U0_s2m_sts_clear = s2m_sts_clear;

assign entry_proc_U0_start_full_n = (start_for_streamtoparallelwithburst_U0_full_n & start_for_sendoutstream_U0_full_n);

assign getinstream_U0_ap_continue = ap_sync_done;

assign getinstream_U0_ap_start = ((ap_sync_reg_getinstream_U0_ap_ready ^ 1'b1) & ap_start);

assign gmem0_BID = 1'd0;

assign gmem0_BRESP = 2'd0;

assign gmem0_BUSER = 1'd0;

assign gmem1_RID = 1'd0;

assign gmem1_RLAST = 1'b0;

assign gmem1_RRESP = 2'd0;

assign gmem1_RUSER = 1'd0;

assign inStreamTop_TREADY = getinstream_U0_inStreamTop_TREADY;

assign m2s_buf_sts = sendoutstream_U0_m2s_buf_sts;

assign outStreamTop_TDATA = sendoutstream_U0_outStreamTop_TDATA;

assign outStreamTop_TKEEP = sendoutstream_U0_outStreamTop_TKEEP;

assign outStreamTop_TLAST = sendoutstream_U0_outStreamTop_TLAST;

assign outStreamTop_TSTRB = sendoutstream_U0_outStreamTop_TSTRB;

assign outStreamTop_TUSER = sendoutstream_U0_outStreamTop_TUSER;

assign outStreamTop_TVALID = sendoutstream_U0_outStreamTop_TVALID;

assign paralleltostreamwithburst_U0_ap_continue = 1'b1;

assign paralleltostreamwithburst_U0_ap_start = ((ap_sync_reg_paralleltostreamwithburst_U0_ap_ready ^ 1'b1) & ap_start);

assign s2m_buf_sts = streamtoparallelwithburst_U0_s2m_buf_sts;

assign s2m_err = getinstream_U0_s2m_err;

assign sendoutstream_U0_ap_continue = ap_sync_done;

assign sendoutstream_U0_ap_start = start_for_sendoutstream_U0_empty_n;

assign start_for_sendoutstream_U0_din = 1'b1;

assign start_for_streamtoparallelwithburst_U0_din = 1'b1;

assign streamtoparallelwithburst_U0_ap_continue = ap_sync_done;

assign streamtoparallelwithburst_U0_ap_start = start_for_streamtoparallelwithburst_U0_empty_n;

endmodule //userdma
